{% extends 'base.html.twig' %}

{% block title %}Détails du Restaurant{% endblock %}

{% block stylesheets %}
    {{ encore_entry_link_tags('app') }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.15.3/css/all.min.css">
{% endblock %}

{% block body %}

{{ include('header/index.html.twig') }}

<main class="container my-5">

    <!-- Conteneur de la publication -->
    <div class="restaurant-post">

        <!-- En-tête avec le nom -->
                            <div class="position-relative">
                                <!-- Image du restaurant -->
                                <img src="{{ asset(restaurant.imageurl ? 'uploads/restaurants/' ~ restaurant.imageurl : 'uploads/defaults.png') }}" class="card-img-top" alt="{{ restaurant.name }}">
                            </div>
                            <br>
                             <div class="card-body">
                                <h5 class="card-title fw-bold">{{ restaurant.name }}</h5>
                                    {{restaurant.description}}
                            </div>
       <hr>
        <!-- Avis Clients -->
        <div class="comment-section">
            <h3>Avis Clients</h3> <hr>
            {% if evaluations|length > 0 %}
                {% for evaluation in evaluations %}
                    <div class="comment">
                     <img src="{{ asset(evaluation.user.profilePicture ? 'uploads/photoprofile/' ~ evaluation.user.profilePicture : 'uploads/photoprofile/default.png') }}" class="card-img-top" alt="{{ evaluation.user.nom }}">
                        <div class="comment-content">
                            <div class="comment-container">
                            <div class="left">
                                <div class="comment-author">{{ evaluation.user.nom }}</div>
                                <div class="star-rating">{% for i in 1..evaluation.rating %}⭐{% endfor %}</div>
                            </div>
                            <div class="right">
                                <small class="text-muted">{{ evaluation.datePublication | date('d/m/Y') }}</small>
                               {% if evaluation.user and app.user and evaluation.user.id == app.user.id %}
                                <button 
    class="btn btn-sm delete-comment"
    data-comment-id="{{ evaluation.id }}"
    data-url="{{ path('comment_delete', {'id': evaluation.id}) }}"
    data-token="{{ csrf_token('delete-comment') }}"
>
    <span class="fas fa-trash"></span>
</button>
                                {% endif %}

                            </div>
                        </div>

                            <div class="comment-text">{{ evaluation.commentaire }}</div>
                            
                        </div>
                    </div>
                {% endfor %}
            {% else %}
                <p>Aucun avis pour ce restaurant.</p>
            {% endif %}
        </div>

        <!-- Formulaire d'ajout d'avis -->
        {% if app.user %}
            <div class="comment-form">
    <form action="{{ path('app_commentaire') }}" method="post">
        <input type="hidden" name="restaurant_id" value="{{ restaurant.id }}">

        <!-- Système d'évaluation par étoiles -->
        <div class="rating">
            <input type="radio" id="star5" name="rating" value="5" />
            <label for="star5" title="5 étoiles">&#9733;</label>
            <input type="radio" id="star4" name="rating" value="4" />
            <label for="star4" title="4 étoiles">&#9733;</label>
            <input type="radio" id="star3" name="rating" value="3" />
            <label for="star3" title="3 étoiles">&#9733;</label>
            <input type="radio" id="star2" name="rating" value="2" />
            <label for="star2" title="2 étoiles">&#9733;</label>
            <input type="radio" id="star1" name="rating" value="1" />
            <label for="star1" title="1 étoile">&#9733;</label>
        </div>

        <input type="text" name="comment" placeholder="Ajoutez votre avis...">
        <button type="submit"><i>Envoyer</i></button>
    </form>
</div>
        {% else %}
            <p style="color: red; text-align: center;">Veuillez vous connecter pour ajouter un avis. <a href="{{ path('app_login') }}">Se connecter</a></p>
        {% endif %}

    </div>

</main>

{{ include('footer/index.html.twig') }}
{% block javascripts %}
    {{ encore_entry_script_tags('app') }}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    document.querySelectorAll('.delete-comment').forEach(button => {
    button.addEventListener('click', function() {
        console.log(this.dataset);
        const url = this.dataset.url; // Récupère l'URL de la requête
        const commentElement = this.closest('.comment'); // Trouve l'élément du commentaire dans le DOM
console.log("URL: " + url); // Vérifie que l'URL est correcte
console.log("Méthode: DELETE");
        Swal.fire({
            title: 'Êtes-vous sûr ?',
            text: "Cette action est irréversible !",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Oui, supprimer !',
            cancelButtonText: 'Annuler'
        }).then((result) => {
  if (result.isConfirmed) {
    fetch(url, {
        method: 'DELETE',
        headers: {
            'X-Requested-With': 'XMLHttpRequest',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            _token: this.dataset.token
        })
    })
    .then(async response => {
        console.log("HTTP Status:", response.status);
        const data = await response.json().catch(() => null);
        console.log("Response JSON:", data);
        
        if (response.ok) {
            Swal.fire('Supprimé!', data.message, 'success');
            commentElement.remove();
        } else {
            Swal.fire('Erreur', data ? data.message : 'Erreur interne serveur', 'error');
        }
    })
    .catch(err => {
        console.error('Fetch Error:', err);
        Swal.fire('Erreur', 'La suppression a échoué.', 'error');
    });
}


        });
    });
});

    </script>
{% endblock %}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
{# {{ dump(app.flashes) }} #}
{% for label, messages in app.flashes %}
    {% for message in messages %}
        <script>
            Swal.fire({
                icon: '{{ label == 'success' ? 'success' : (label == 'error' ? 'error' : 'info') }}',
                title: '{{ label|capitalize }}',
                text: '{{ message }}',
                confirmButtonText: 'OK'
            });
        </script>
    {% endfor %}
{% endfor %}

{% endblock %}

